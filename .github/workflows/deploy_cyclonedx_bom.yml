name: Deploy cyclonedx-bom to Crates.io
on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: "cyclonedx-bom release type (major, minor, patch)"
        required: true
        default: "patch"
jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      TAG_NAME: ${{ steps.version.outputs.TAG_NAME }}
    steps:
      - name: JQ
        run: |
          sudo apt-get install -y jq
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
      - name: Cargo bump
        run: |
          cargo install cargo-edit
          cargo set-version --package cyclonedx-bom --bump ${{ github.event.inputs.releaseType }}
      - name: Set new version and tag name
        id: version
        run: |
          CARGO_VERSION=$(cargo metadata | jq -r '.packages[] | select(.name == "cyclonedx-bom") | .version')
          echo "CARGO_VERSION=$CARGO_VERSION" >> $GITHUB_OUTPUT
          TAG_NAME=cyclonedx-bom-$CARGO_VERSION
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
      - name: Build one time, for sanity
        run: cargo build
      # - name: Publish
      #   run: cargo publish --token ${{ secrets.CARGO_API_KEY }} --package cyclonedx-bom --verbose --allow-dirty
      - name: Configure git and add files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "New development bump of cyclonedx-bom to ${{steps.version.outputs.CARGO_VERSION}}"
          git tag -a ${{ steps.version.outputs.TAG_NAME }} -m "cyclonedx-bom ${{ steps.version.outputs.CARGO_VERSION }} release"
          git push --follow-tags

  build-prod:
    name: Build prod - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: cargo-cyclonedx
            name: cargo-cyclonedx-Linux-x86_64-musl.tar.gz

            # - release_for: Windows-x86_64
            #   os: windows-latest
            #   target: x86_64-pc-windows-msvc
            #   bin: cargo-cyclonedx.exe
            #   name: cargo-cyclonedx-Windows-x86_64.zip
            #
          # - release_for: macOS-aarch64
          #   os: macOS-latest
          #   target: aarch64-apple-darwin
          #   bin: cargo-cyclonedx
          #   name: cargo-cyclonedx-Darwin-aarch64.tar.gz

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: cargo-cyclonedx
            name: cargo-cyclonedx-Darwin-x86_64.tar.gz

    runs-on: ${{ matrix.platform.os }}
    needs: deploy

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout release tag
        run: |
          echo "${{ needs.deploy.outputs.TAG_NAME }}"
          git checkout ${{ needs.deploy.outputs.TAG_NAME }}
          git status
      - uses: Swatinem/rust-cache@v2
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Build release binaries
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true
      - name: Package as archives
        id: zip
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
          shasum -a 256 ${{ matrix.platform.name }}
          ls -lh
      - uses: actions/upload-artifact@v3
        with:
          name: cyclonedx-${{ matrix.platform.os_name }}
          path: "cyclonedx-*"

  release:
    needs: [deploy, build-prod]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Review and move artifacts
        run: |
          mkdir dist
          find artifacts -type f -exec mv {} dist \;
          ls -lh dist
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "cyclonedx-bom-${{ needs.deploy.outputs.TAG_NAME }}"
          tag_name: ${{ needs.deploy.outputs.TAG_NAME }}
          files: "dist/*"
